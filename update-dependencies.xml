<!--
  ~ Copyright LWJGL. All rights reserved.
  ~ License terms: https://www.lwjgl.org/license
  -->

<!-- Downloads LWJGL's library dependencies. -->
<project name="LWJGL" basedir="." default="update-dependencies" xmlns:if="ant:if" xmlns:unless="ant:unless">

    <property name="config" location="config" relative="true"/>
    <import file="${config}/build-definitions.xml" id="defs"/>

    <!-- *********************************** -->
    <property name="findbugs" value="3.0.2"/>
    <property name="testng" value="7.0.0"/>
    <property name="jcommander" value="1.78"/>
    <property name="joml" value="1.10.0"/>
    <property name="kotlinc-version" value="1.4.10"/>
    <property name="kotlinc-build" value="1.4.10-release-411"/>
    <property name="jmh-core" value="1.22"/>
    <property name="jmh-generator-annprocess" value="1.22"/>
    <property name="jopt-simple" value="5.0.4"/>
    <property name="commons-math3" value="3.6.1"/>
    <property name="openjfx" value="11.0.2"/>
    <!-- *********************************** -->

    <target name="check-dependencies" description="Updates LWJGL dependencies, if required" unless="${build.offline}">
        <!-- Checks if the Kotlin compiler must be updated -->
        <local name="kotlinc-build-current"/>
        <loadfile property="kotlinc-build-current" srcfile="${kotlinc}/build.txt" quiet="true" taskname="kotlinc"/>
        <condition property="kotlinc-uptodate">
            <and>
                <isset property="kotlinc-build-current"/>
                <equals arg1="${kotlinc-build-current}" arg2="${kotlinc-build}"/>
            </and>
        </condition>

        <uptodate property="lib-uptodate" srcfile="update-dependencies.xml" targetfile="${lib}/touch.txt"/>

        <local name="dependencies-uptodate"/>
        <condition property="dependencies-uptodate">
            <and>
                <isset property="kotlinc-uptodate"/>
                <isset property="lib-uptodate"/>
            </and>
        </condition>

        <antcall target="update-dependencies" unless:set="dependencies-uptodate"/>
    </target>

    <target name="update-dependencies" description="Updates LWJGL dependencies" unless="${build.offline}">
        <taskdef name="logLevel" classname="org.lwjgl.SetLogLevel" classpath="${bin.ant}"/>

        <mkdir dir="${lib}"/>
        <mkdir dir="${lib}/java"/>
        <antcall target="-lib-download"/>
        <antcall target="-kotlinc-download"/>
    </target>

    <!-- Downloads and extracts the Kotlin compiler. -->
    <target name="-kotlinc-download" unless="kotlinc-uptodate">
        <local name="kotlinc-archive"/>
        <property name="kotlinc-archive" value="kotlin-compiler-${kotlinc-version}.zip"/>

        <!-- Download new build -->
        <get taskname="kotlinc" src="https://github.com/JetBrains/kotlin/releases/download/v${kotlinc-version}/${kotlinc-archive}" dest="${lib}" verbose="true"/>

        <!-- Delete current build -->
        <delete dir="${kotlinc}" taskname="kotlinc"/>
        <!-- Extract build -->
        <unzip src="${lib}/${kotlinc-archive}" dest="${lib}" taskname="kotlinc"/>
        <!-- Delete build archive -->
        <delete file="${lib}/${kotlinc-archive}" taskname="kotlinc"/>

        <echo message="The Kotlin compiler was updated to build: ${kotlinc-version}" taskname="kotlinc"/>
    </target>

    <!-- Downloads the Java dependencies. -->
    <target name="-lib-download" unless="lib-uptodate">
        <update-mvn name="findbugs" group="com/google/code/findbugs" artifact="jsr305" version="${findbugs}"/>
        <update-mvn name="JCommander" group="com/beust" artifact="jcommander" version="${jcommander}" sources="false"/>
        <update-mvn name="TestNG" group="org/testng" artifact="testng" version="${testng}"/>
        <update-mvn name="JOML" group="org/joml" artifact="joml" version="${joml}"/>
        <update-mvn name="JMH Core" group="org/openjdk/jmh" artifact="jmh-core" version="${jmh-core}"/>
        <update-mvn name="JMH Generators: Annotation Processing" group="org/openjdk/jmh" artifact="jmh-generator-annprocess" version="${jmh-generator-annprocess}" sources="false"/>
        <update-mvn name="JOpt Simple" group="net/sf/jopt-simple" artifact="jopt-simple" version="${jopt-simple}" sources="false"/>
        <update-mvn name="Apache Commons Math" group="org/apache/commons" artifact="commons-math3" version="${commons-math3}" sources="false"/>

        <mkdir dir="${lib}/java/openjfx11" if:set="driftfx11"/>
        <property name="platform.openjfx" value="linux" if:set="platform.linux"/>
        <property name="platform.openjfx" value="mac" if:set="platform.macos"/>
        <property name="platform.openjfx" value="win" if:set="platform.windows"/>

        <update-mvn name="OpenJFX Base" group="org/openjfx" artifact="javafx-base" version="${openjfx}" classifier="-${platform.openjfx}" subfolder="/openjfx11" sources="false" if:set="driftfx11"/>
        <update-mvn name="OpenJFX Graphics" group="org/openjfx" artifact="javafx-graphics" version="${openjfx}" classifier="-${platform.openjfx}" subfolder="/openjfx11" sources="false" if:set="driftfx11"/>

        <touch file="${lib}/touch.txt" verbose="false"/>
    </target>

    <target name="clean" description="Deletes LWJGL dependencies">
        <delete taskname="kotlinc" dir="${lib}/kotlinc"/>
        <delete taskname="Java dependencies" dir="${lib}/java"/>
    </target>

</project>
